{
    "module": "xdmod",
    "migration-8_1_2-8_5_0": [
        {
            "name": "create-tables",
            "description": "Create HPCDB tables",
            "namespace": "ETL\\Maintenance",
            "class": "ManageTables",
            "options_class": "MaintenanceOptions",
            "#": "Table creation order is important due to foreign key constraints",
            "definition_file_list": [
                "common/hpcdb/resources.json"
            ],
            "endpoints": {
                "source": {
                    "type": "mysql",
                    "name": "Staging tables",
                    "config": "database",
                    "schema": "mod_hpcdb"
                },
                "destination": {
                    "type": "mysql",
                    "name": "Aggregate tables",
                    "config": "database",
                    "schema": "mod_hpcdb"
                }
            }
        },
        {
            "name": "update-modw_aggregates-tables",
            "description": "Update modw_aggregates tables",
            "namespace": "ETL\\Maintenance",
            "class": "ManageTables",
            "options_class": "MaintenanceOptions",
            "definition_file_list": [
                "jobs/xdw/jobfact_by_day_joblist.json"
            ],
            "endpoints": {
                "destination": {
                    "type": "mysql",
                    "name": "Aggregate tables",
                    "config": "database",
                    "schema": "modw_aggregates"
                }
            }
        },
        {
            "name": "update-moddb-tables",
            "description": "Update moddb tables",
            "namespace": "ETL\\Maintenance",
            "class": "ManageTables",
            "options_class": "MaintenanceOptions",
            "definition_file_list": [
                "xdb/batch-export-requests.json",
                "xdb/reports.json"
            ],
            "endpoints": {
                "destination": {
                    "type": "mysql",
                    "name": "Database",
                    "config": "database",
                    "schema": "moddb"
                }
            }
        },
        {
            "name": "add-moddb_staging-tables",
            "description": "Add moddb staging tables",
            "namespace": "ETL\\Maintenance",
            "class": "ManageTables",
            "options_class": "MaintenanceOptions",
            "definition_file_list": [
                "xdb/report-templates-staging.json",
                "xdb/report-template-charts-staging.json"
            ],
            "endpoints": {
                "destination": {
                    "type": "mysql",
                    "name": "Staging tables",
                    "config": "database",
                    "schema": "moddb"
                }
            }
        },
        {
            "name": "report-templates-staging",
            "namespace": "ETL\\Ingestor",
            "class": "StructuredFileIngestor",
            "options_class": "IngestorOptions",
            "description": "report-templates-staging + data",
            "definition_file": "xdb/report-templates-staging.json",
            "endpoints": {
                "source": {
                    "type": "jsonfile",
                    "name": "report-templates-staging",
                    "path": "xdb/report-templates.json"
                },
                "destination": {
                    "type": "mysql",
                    "name": "Staging tables",
                    "config": "database",
                    "schema": "moddb"
                }
            },
            "truncate_destination": true
        },
        {
            "name": "report-template-charts-staging",
            "namespace": "ETL\\Ingestor",
            "class": "StructuredFileIngestor",
            "options_class": "IngestorOptions",
            "description": "report-template-charts-staging + data",
            "definition_file": "xdb/report-template-charts-staging.json",
            "endpoints": {
                "source": {
                    "type": "jsonfile",
                    "name": "report-template-charts-staging",
                    "path": "xdb/report-template-charts.json"
                },
                "destination": {
                    "type": "mysql",
                    "name": "Staging tables",
                    "config": "database",
                    "schema": "moddb"
                }
            },
            "truncate_destination": true
        },
        {
            "name": "report-templates",
            "description": "report-templates + data",
            "namespace": "ETL\\Ingestor",
            "class": "DatabaseIngestor",
            "options_class": "IngestorOptions",
            "definition_file": "xdb/report-templates.json",
            "endpoints": {
                "source": {
                    "type": "mysql",
                    "name": "Staging tables",
                    "config": "database",
                    "schema": "moddb"
                },
                "destination": {
                    "type": "mysql",
                    "name": "Staging tables",
                    "config": "database",
                    "schema": "moddb"
                }
            },
            "truncate_destination": true
        },
        {
            "name": "report-template-charts",
            "description": "report-template-charts + data",
            "namespace": "ETL\\Ingestor",
            "class": "DatabaseIngestor",
            "options_class": "IngestorOptions",
            "definition_file": "xdb/report-template-charts.json",
            "endpoints": {
                "source": {
                    "type": "mysql",
                    "name": "Staging tables",
                    "config": "database",
                    "schema": "moddb"
                },
                "destination": {
                    "type": "mysql",
                    "name": "Staging tables",
                    "config": "database",
                    "schema": "moddb"
                }
            },
            "truncate_destination": true
        },
        {
            "name": "update-modw_cloud-tables",
            "description": "Update modw_cloud tables",
            "namespace": "ETL\\Maintenance",
            "class": "ManageTables",
            "options_class": "MaintenanceOptions",
            "definition_file_list": [
                "cloud_common/domains.json",
                "cloud_common/domains_staging.json",
                "cloud_openstack/domain_submission_venue.json",
                "cloud_openstack/domain_submission_venue_staging.json",
                "cloud_openstack/staging_event.json",
                "cloud_openstack/raw_event.json",
                "cloud_common/session_records.json",
                "cloud_common/event.json",
                "cloud_common/cloudfact_by_.json"
            ],
            "endpoints": {
                "destination": {
                    "type": "mysql",
                    "name": "Cloud Realm Tables",
                    "config": "database",
                    "schema": "modw_cloud"
                }
            }
        },
        {
            "name": "OpenStackUnknownDomainStagingIngestor",
            "description": "The default 'Unknown' domain.",
            "class": "DatabaseIngestor",
            "definition_file": "cloud_openstack/domains_unknown_staging.json",
            "namespace": "ETL\\Ingestor",
            "options_class": "IngestorOptions",
            "truncate_destination": true,
            "endpoints": {
                "source": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                },
                "destination": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                }
            }
        },
        {
            "name": "OpenStackDomainStagingIngestor",
            "description": "Open Stack cloud domain_staging data",
            "class": "DatabaseIngestor",
            "definition_file": "cloud_openstack/domains_staging.json",
            "namespace": "ETL\\Ingestor",
            "options_class": "IngestorOptions",
            "truncate_destination": false,
            "endpoints": {
                "source": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                },
                "destination": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                }
            }

        },
        {
            "name": "OpenStackDomainIngestor",
            "description": "Open Stack cloud domains data",
            "class": "DatabaseIngestor",
            "definition_file": "cloud_openstack/domains.json",
            "namespace": "ETL\\Ingestor",
            "options_class": "IngestorOptions",
            "truncate_destination": false,
            "endpoints": {
                "source": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                },
                "destination": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                }
            }
        },
        {
            "name": "OpenStackDomainToSubmissionVenueMappingStagingIngestor",
            "description": "Load schema version history",
            "namespace": "ETL\\Ingestor",
            "class": "StructuredFileIngestor",
            "options_class": "IngestorOptions",
            "definition_file": "cloud_openstack/domain_submission_venue_staging.json",
            "endpoints": {
                "source": {
                    "type": "jsonfile",
                    "name": "openstack-domain-submission-venue-mapping",
                    "path": "cloud_openstack/domain_submission_venue_staging_map.json"
                },
                "destination": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                }
            }
        },
        {
            "name": "OpenStackDomainToSubmissionVenueMappingIngestor",
            "description": "",
            "class": "DatabaseIngestor",
            "definition_file": "cloud_openstack/domain_submission_venue.json",
            "namespace": "ETL\\Ingestor",
            "options_class": "IngestorOptions",
            "truncate_destination": false,
            "endpoints": {
                "utility": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw"
                },
                "source": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                },
                "destination": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                }
            }
        },
        {
            "#": "Events must be ingested after all other dimensions",
            "name": "OpenStackCloudStagingEventIngestor",
            "description": "OpenStack staging data for cloud events",
            "class": "DatabaseIngestor",
            "definition_file": "cloud_openstack/staging_event.json",
            "namespace": "ETL\\Ingestor",
            "options_class": "IngestorOptions",
            "truncate_destination": false,
            "endpoints": {
                "utility": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw"
                },
                "source": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                },
                "destination": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                }
            }
        },
        {
            "name": "cloud-state-action",
            "namespace": "ETL\\Ingestor",
            "options_class": "IngestorOptions",
            "class": "CloudStateReconstructorTransformIngestor",
            "definition_file": "cloud_common/cloud_state.json",
            "description": "Reconstructs discrete runs from cloud events",
            "truncate_destination": false,
            "endpoints": {
                "source": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud"
                },
                "destination": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                }
            }
        },
        {
            "name": "cloud-session-records",
            "class": "DatabaseIngestor",
            "namespace": "ETL\\Ingestor",
            "options_class": "IngestorOptions",
            "definition_file": "cloud_common/session_records.json",
            "description": "Builds intermediate cloud event table",
            "truncate_destination": false,
            "endpoints": {
                "source": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud"
                },
                "destination": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                }
            }
        },
        {
            "#": "Asset data must be aggregated post ingestion",
            "name": "CloudEventAggregator",
            "namespace": "ETL\\Aggregator",
            "options_class": "AggregatorOptions",
            "class": "SimpleAggregator",
            "description": "Aggregate cloud records.",
            "definition_file": "cloud_common/cloud_metrics_aggregation.json",
            "table_prefix": "cloudfact_by_",
            "aggregation_units": [
                "day", "month", "quarter", "year"
            ],
            "truncate_destination": false,
            "endpoints": {
                "source": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud"
                },
                "destination": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                }
            }
        },
        {
            "name": "IngestResourceTypeRealmRelationsStaging",
            "description": "",
            "definition_file": "common/staging/resource-type-realms.json",
            "namespace": "ETL\\Ingestor",
            "options_class": "IngestorOptions",
            "class": "StructuredFileIngestor",
            "endpoints": {
                "source": {
                    "type": "configurationfile",
                    "namespace": "ETL\\DataEndpoint",
                    "options_class": "IngestorOptions",
                    "name": "Resource Types configuration",
                    "path": "${base_dir}/../resource_types.json",
                    "field_names": [
                        "abbrev",
                        "realm"
                    ],
                    "filters": [
                        {
                            "#": "Reformat config file for ETLs purposes.",
                            "type": "external",
                            "name": "jq",
                            "path": "jq",
                            "arguments": "'[(.resource_types | keys) as $a | .resource_types as $rt |  $a[] | {abbrev: . , realm: $rt[.].realms[]}]'"
                        }
                    ]
                },
                "destination": {
                    "type": "mysql",
                    "name": "Shredder/Staging Database",
                    "config": "database",
                    "schema": "mod_shredder",
                    "definition_file": "common/staging/resource-type-realms.json"
                }
            }
        },
        {
            "class": "DatabaseIngestor",
            "name": "IngestInitialRealms",
            "namespace": "ETL\\Ingestor",
            "options_class": "IngestorOptions",
            "definition_file": "acls/realms.json",
            "disable_keys": true,
            "endpoints": {
                "source": {
                    "type": "mysql",
                    "name": "shredder",
                    "config": "database",
                    "schema": "mod_shredder"
                },
                "destination": {
                    "type": "mysql",
                    "name": "realm",
                    "config": "database",
                    "schema": "moddb"
                }
            }
        },
        {
            "class": "DatabaseIngestor",
            "name": "IngestResourcefactRealmRelations",
            "namespace": "ETL\\Ingestor",
            "options_class": "IngestorOptions",
            "definition_file": "common/hpcdb/resource-type-realms.json",
            "description": "Ingest resource information into resourcefact table. Modeled after hpcdb-xdw-ingest-common.resource",
            "endpoints": {
                "source": {
                    "type": "mysql",
                    "name": "HPCDB",
                    "config": "database",
                    "schema": "mod_shredder"
                },
                "destination": {
                    "type": "mysql",
                    "name": "MODDB",
                    "config": "database",
                    "schema": "moddb"
                }
            }
        }
    ]
}
