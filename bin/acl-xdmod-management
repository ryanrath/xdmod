#!/usr/bin/env bash
DEFAULT_SECTION="acls-xdmod-management";

PHP=`which php`;
CWD="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )";

# Make sure that they have PHP installed.
if [ -z "$PHP" ];then
    echo "Unable to find 'php' in the current path. Please remedy this and run the script again.";
    exit;
fi



# Parse the command line arguments.
while [[ $# -gt 0 ]]
do
  key="$1"

  case $key in
    -b|--base_dir)
      BASE_DIR="$2"
      shift
      ;;
    -d|--config_dir)
      CONFIG_DIR="$2"
      shift
      ;;
    -c|--config_file)
      CONFIG_FILE="$2"
      shift # past argument
      ;;
    -s|--section)
      ACTION="$2"
      shift # past argument
      ;;
    -t|--dry_run)
      DRY_RUN="true";
      ;;
    -v|--verbose)
      VERBOSE="debug";
      ;;
    -h|--help)
      cat <<EOF
Usage: acl-xdmod-management [OPTIONS]
Execute the ETL action that ensures the tables required for the Acl
infrastructure are present.
  -b|--base_dir    <base_dir> specify the base XDMoD directory.
                             (default: <this_script_dir>/../ )

  -d|--config_dir  <config_dir> specify the XDMoD 'configuration' directory.
                             (default: base_dir/configuration or base_dir/etc )

  -c|--config_file <config_file> specify the ETL configuration file to use.
                             (default: config_dir/etl/etl.json)
  -s|--section     <section> specify the ETL section that should be used.
                             (default: $DEFAULT_SECTION)

  -d|--dry_run    specify that this run should display but make no changes
                  (default: false)

  -v|--verbose    specify that the verbose level should be 'debug'
                  (default: warning)

  -h|--help       show this help message and exit
EOF
      exit;
      ;;
    *)
        echo "Unknown option $key";
        exit;
      ;;
  esac
  shift # past argument or value
done

# Figure out what kind of deployment / directory structure we're dealing with.
if [ -z "$BASE_DIR" ]; then
    BASE_DIR="$CWD/./..";
fi

if [ -d "$BASE_DIR/share" ]; then
    SHARE_DIR="$BASE_DIR/share";
    if [ -z "$CONFIG_DIR" ]; then
        CONFIG_DIR="$BASE_DIR/etc";
    fi
else
    SHARE_DIR="$BASE_DIR";
    if [ -z "$CONFIG_DIR" ]; then
        CONFIG_DIR="$BASE_DIR/configuration";
    fi
fi

if [ ! -e "$SHARE_DIR" ]; then
  cat <<EOF
Unable to identify where the tools directory resides.
Please correct and run the script again.
Looked in:
  $BASE_DIR
  $SHARE_DIR
EOF
  exit;
fi

if [ ! -e "$CONFIG_DIR" ]; then
  cat <<EOF
Unable to identify where the ETL config file is located.
Please correct and run the script again.
Looked in:
  $BASE_DIR\etc
  $BASE_DIR\configuration
EOF
  exit;
fi

SCRIPT="$SHARE_DIR/tools/etl/etl_overseer.php";

if [ ! -e "$SCRIPT" ]; then
    cat <<EOF
Unable to locate the etl_overseer script.
Please correct and run this script again.
Location: $SCRIPT
EOF
    exit;
fi

# Setup some defaults for values that the user may not have supplied.
if [ -z "$CONFIG_FILE" ]; then
    CONFIG_FILE="$CONFIG_DIR/etl/etl.json";
fi

if [ -z "$SECTION" ]; then
    SECTION="$DEFAULT_SECTION";
fi

if [ -z "$DRY_RUN" ]; then
    DRY_RUN=false
fi

if [ -z "$VERBOSE" ]; then
    VERBOSE="warning";
fi

CMD="$PHP $SHARE_DIR/tools/etl/etl_overseer.php -c $CONFIG_FILE -p \"$SECTION\" -v $VERBOSE";

if [ "$DRY_RUN" == "true" ]; then
    CMD="$CMD -t";
fi

echo -e "[EXECUTING] $CMD";

eval ${CMD};

echo -e "[DONE] $CMD";
