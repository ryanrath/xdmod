{
    "totalCount": 1,
    "data": [
        {
            "realms": {
                "Cloud": {
                    "metrics": {
                        "cloud_avg_cores_reserved": {
                            "text": "Average Cores Reserved Weighted By Wall Hours",
                            "info": "The average number of cores assigned to running sessions, weighted by wall hours.<br\/><b>Core Hours<\/b>: The product of the number of cores assigned to a VM and its wall time, in hours.<br\/><b>Wall Time:<\/b> The duration between the start and end times of an individual session.<br\/><b>Session:<\/b> A session is defined as a discrete run of a virtual machine (VM) on a cloud resource; i.e. any start and stop of a VM. For example, if a single VM is stopped and restarted ten times in a given day, this would be counted as ten sessions for that day.",
                            "std_err": false
                        },
                        "cloud_avg_memory_reserved": {
                            "text": "Average Memory Reserved Weighted By Wall Hours (Bytes)",
                            "info": "The average amount of memory (in bytes) reserved by running sessions, weighted by wall hours.<br\/><b>Wall Time:<\/b> The duration between the start and end times of an individual session.<br\/><b>Session:<\/b> A session is defined as a discrete run of a virtual machine (VM) on a cloud resource; i.e. any start and stop of a VM. For example, if a single VM is stopped and restarted ten times in a given day, this would be counted as ten sessions for that day.",
                            "std_err": false
                        },
                        "cloud_avg_rv_storage_reserved": {
                            "text": "Average Root Volume Storage Reserved Weighted By Wall Hours (Bytes)",
                            "info": "The average amount of root volume storage space (in bytes) reserved by running sessions, weighted by wall hours.<br\/><b>Wall Time:<\/b> The duration between the start and end times of an individual session.<br\/><b>Session:<\/b> A session is defined as a discrete run of a virtual machine (VM) on a cloud resource; i.e. any start and stop of a VM. For example, if a single VM is stopped and restarted ten times in a given day, this would be counted as ten sessions for that day.",
                            "std_err": false
                        },
                        "cloud_core_utilization": {
                            "text": "Core Hour Utilization (%)",
                            "info": "A percentage that shows how many core hours were reserved over a time period against how many core hours a resource had available during that time period.<br\/><b>Core Hours<\/b>: The product of the number of cores assigned to a VM and its wall time, in hours.<br\/><b>Core Hours Available:<\/b> The total number of core hours available for a time period. Calculated by taking the product of the number of cores available over a time period, number of days in a time period and the number of hours in a day.",
                            "std_err": false
                        },
                        "cloud_core_time": {
                            "text": "Core Hours: Total",
                            "info": "The total number of Core Hours consumed by running sessions.<br\/><b>Core Hours<\/b>: The product of the number of cores assigned to a VM and its wall time, in hours.<br\/><b>Session:<\/b> A session is defined as a discrete run of a virtual machine (VM) on a cloud resource; i.e. any start and stop of a VM. For example, if a single VM is stopped and restarted ten times in a given day, this would be counted as ten sessions for that day.",
                            "std_err": false
                        },
                        "cloud_num_sessions_running": {
                            "text": "Number of Sessions Active",
                            "info": "The total number of sessions on a cloud resource.<br\/><b>Session:<\/b> A session is defined as a discrete run of a virtual machine (VM) on a cloud resource; i.e. any start and stop of a VM. For example, if a single VM is stopped and restarted ten times in a given day, this would be counted as ten sessions for that day.<br\/><b>Start:<\/b> A session start event is defined as the initial creation, resume from pause\/suspension, or unshelving of a VM. In the event that no such event has been collected, the first heartbeat event (e.g. a state report) is treated as the start of a new session.<br\/><b>Stop:<\/b> A session stop event is defined as a pause, shelving, suspension, or termination event of a VM.",
                            "std_err": false
                        },
                        "cloud_num_sessions_ended": {
                            "text": "Number of Sessions Ended",
                            "info": "The total number of sessions that were ended on a cloud resource. A session is ended when a VM is paused, shelved, stopped, or terminated on a cloud resource.<br\/><b>Session:<\/b> A session is defined as a discrete run of a virtual machine (VM) on a cloud resource; i.e. any start and stop of a VM. For example, if a single VM is stopped and restarted ten times in a given day, this would be counted as ten sessions for that day.<br\/><b>Start:<\/b> A session start event is defined as the initial creation, resume from pause\/suspension, or unshelving of a VM. In the event that no such event has been collected, the first heartbeat event (e.g. a state report) is treated as the start of a new session.<br\/><b>Stop:<\/b> A session stop event is defined as a pause, shelving, suspension, or termination event of a VM.",
                            "std_err": false
                        },
                        "cloud_num_sessions_started": {
                            "text": "Number of Sessions Started",
                            "info": "The total number of sessions started on a cloud resource. A session begins when a VM is created, unshelved, or resumes running on a cloud resource.<br\/><b>Session:<\/b> A session is defined as a discrete run of a virtual machine (VM) on a cloud resource; i.e. any start and stop of a VM. For example, if a single VM is stopped and restarted ten times in a given day, this would be counted as ten sessions for that day.<br\/><b>Start:<\/b> A session start event is defined as the initial creation, resume from pause\/suspension, or unshelving of a VM. In the event that no such event has been collected, the first heartbeat event (e.g. a state report) is treated as the start of a new session.<br\/><b>Stop:<\/b> A session stop event is defined as a pause, shelving, suspension, or termination event of a VM.",
                            "std_err": false
                        },
                        "cloud_avg_wallduration_hours": {
                            "text": "Wall Hours: Per Session",
                            "info": "The total number of sessions on a cloud resource.<br\/><b>Session:<\/b> A session is defined as a discrete run of a virtual machine (VM) on a cloud resource; i.e. any start and stop of a VM. For example, if a single VM is stopped and restarted ten times in a given day, this would be counted as ten sessions for that day.<br\/><b>Start:<\/b> A session start event is defined as the initial creation, resume from pause\/suspension, or unshelving of a VM. In the event that no such event has been collected, the first heartbeat event (e.g. a state report) is treated as the start of a new session.<br\/><b>Stop:<\/b> A session stop event is defined as a pause, shelving, suspension, or termination event of a VM.",
                            "std_err": false
                        },
                        "cloud_wall_time": {
                            "text": "Wall Hours: Total",
                            "info": "The average number of cores assigned to running sessions, weighted by wall hours.<br\/><b>Core Hours<\/b>: The product of the number of cores assigned to a VM and its wall time, in hours.<br\/><b>Wall Time:<\/b> The duration between the start and end times of an individual session.<br\/><b>Session:<\/b> A session is defined as a discrete run of a virtual machine (VM) on a cloud resource; i.e. any start and stop of a VM. For example, if a single VM is stopped and restarted ten times in a given day, this would be counted as ten sessions for that day.",
                            "std_err": false
                        }
                    },
                    "dimensions": {
                        "none": {
                            "text": "None",
                            "info": "Summarizes Cloud data reported to the Screwdriver database."
                        },
                        "nsfdirectorate": {
                            "text": "Decanal Unit",
                            "info": "Decanal Unit"
                        },
                        "parentscience": {
                            "text": "Department",
                            "info": "Department"
                        },
                        "domain": {
                            "text": "Domain",
                            "info": "A domain is a high-level container for projects, users and groups"
                        },
                        "configuration": {
                            "text": "Instance Type",
                            "info": "The instance type of a virtual machine."
                        },
                        "pi": {
                            "text": "PI",
                            "info": "The principal investigator of a project."
                        },
                        "fieldofscience": {
                            "text": "PI Group",
                            "info": "PI Group"
                        },
                        "project": {
                            "text": "Project",
                            "info": "The project associated with a running session of a virtual machine."
                        },
                        "resource": {
                            "text": "Resource",
                            "info": "A resource is defined as any infrastructure that hosts virtual machines."
                        },
                        "submission_venue": {
                            "text": "Submission Venue",
                            "info": "The venue that a job or cloud instance was initiated from."
                        },
                        "username": {
                            "text": "System Username",
                            "info": "The specific system username of the users who ran jobs."
                        },
                        "person": {
                            "text": "User",
                            "info": "A person on a principal investigator's allocation, able to spin up and manipulate VM instances."
                        },
                        "vm_size": {
                            "text": "VM Size: Cores",
                            "info": "A categorization of sessions into discrete groups based on the number of cores used by each VM."
                        },
                        "vm_size_memory": {
                            "text": "VM Size: Memory",
                            "info": "A categorization of sessions into discrete groups based on the amount of memory reserved by each VM."
                        }
                    },
                    "text": "Cloud",
                    "category": "Cloud"
                },
                "Jobs": {
                    "metrics": {
                        "avg_cpu_hours": {
                            "text": "CPU Hours: Per Job",
                            "info": "The average CPU hours (number of CPU cores x wall time hours) per Screwdriver job.<br\/>For each job, the CPU usage is aggregated. For example, if a job used 1000 CPUs for one minute, it would be aggregated as 1000 CPU minutes or 16.67 CPU hours.",
                            "std_err": true
                        },
                        "total_cpu_hours": {
                            "text": "CPU Hours: Total",
                            "info": "The total CPU hours (number of CPU cores x wall time hours) used by Screwdriver jobs.<br\/>For each job, the CPU usage is aggregated. For example, if a job used 1000 CPUs for one minute, it would be aggregated as 1000 CPU minutes or 16.67 CPU hours.",
                            "std_err": false
                        },
                        "avg_gpus": {
                            "text": "GPU Count: Per Job",
                            "info": "The average job size per Screwdriver job.<br><i>Job Size: <\/i>The number of GPUs used by a (parallel) job.",
                            "std_err": true
                        },
                        "avg_gpu_hours": {
                            "text": "GPU Hours: Per Job",
                            "info": "The average GPU hours (number of GPU cores x wall time hours) per Screwdriver job.<br\/>For each job, the GPU usage is aggregated. For example, if a job used 1000 GPUs for one minute, it would be aggregated as 1000 GPU minutes or 16.67 GPU hours.",
                            "std_err": false
                        },
                        "total_gpu_hours": {
                            "text": "GPU Hours: Total",
                            "info": "The total GPU hours (number of GPUs x wall time hours) used by Screwdriver jobs.<br\/>For each job, the GPU usage is aggregated. For example, if a job used 1000 GPUs for one minute, it would be aggregated as 1000 GPU minutes or 16.67 GPU hours.",
                            "std_err": false
                        },
                        "max_processors": {
                            "text": "Job Size: Max (Core Count)",
                            "info": "The maximum size Screwdriver job in number of cores.<br\/><i>Job Size: <\/i>The total number of processor cores used by a (parallel) job.",
                            "std_err": false
                        },
                        "min_processors": {
                            "text": "Job Size: Min (Core Count)",
                            "info": "The minimum size Screwdriver job in number of cores.<br\/><i>Job Size: <\/i>The total number of processor cores used by a (parallel) job.",
                            "std_err": false
                        },
                        "normalized_avg_processors": {
                            "text": "Job Size: Normalized (% of Total Cores)",
                            "info": "The percentage average size Screwdriver job over total machine cores.<br><i>Normalized Job Size: <\/i>The percentage total number of processor cores used by a (parallel) job over the total number of cores on the machine.",
                            "std_err": false
                        },
                        "avg_processors": {
                            "text": "Job Size: Per Job (Core Count)",
                            "info": "The average job size per Screwdriver job.<br><i>Job Size: <\/i>The number of processor cores used by a (parallel) job.",
                            "std_err": true
                        },
                        "avg_job_size_weighted_by_cpu_hours": {
                            "text": "Job Size: Weighted By CPU Hours (Core Count)",
                            "info": "The average Screwdriver job size weighted by CPU Hours. Defined as <br><i>Average Job Size Weighted By CPU Hours: <\/i> sum(i = 0 to n){ job i core count * job i cpu hours}\/sum(i =  0 to n){job i cpu hours}",
                            "std_err": false
                        },
                        "avg_job_size_weighted_by_gpu_hours": {
                            "text": "Job Size: Weighted By GPU Hours (GPU Count)",
                            "info": "The average Screwdriver job size weighted by GPU Hours. Defined as <br><i>Average Job Size Weighted By GPU Hours: <\/i> sum(i = 0 to n){ job i core count * job i gpu hours}\/sum(i =  0 to n){job i gpu hours}",
                            "std_err": false
                        },
                        "avg_node_hours": {
                            "text": "Node Hours: Per Job",
                            "info": "The average node hours (number of nodes x wall time hours) per Screwdriver job.",
                            "std_err": true
                        },
                        "total_node_hours": {
                            "text": "Node Hours: Total",
                            "info": "The total node hours (number of nodes x wall time hours) used by Screwdriver jobs.",
                            "std_err": false
                        },
                        "job_count": {
                            "text": "Number of Jobs Ended",
                            "info": "The total number of Screwdriver jobs that ended within the selected duration.",
                            "std_err": false
                        },
                        "running_job_count": {
                            "text": "Number of Jobs Running",
                            "info": "The total number of Screwdriver jobs that are running.",
                            "std_err": false
                        },
                        "started_job_count": {
                            "text": "Number of Jobs Started",
                            "info": "The total number of Screwdriver jobs that started executing within the selected duration.",
                            "std_err": false
                        },
                        "submitted_job_count": {
                            "text": "Number of Jobs Submitted",
                            "info": "The total number of Screwdriver jobs that submitted\/queued within the selected duration.<i>",
                            "std_err": false
                        },
                        "active_pi_count": {
                            "text": "Number of PIs: Active",
                            "info": "The total number of PIs that used Screwdriver resources.",
                            "std_err": false
                        },
                        "active_resource_count": {
                            "text": "Number of Resources: Active",
                            "info": "The total number of active Screwdriver resources.",
                            "std_err": false
                        },
                        "active_person_count": {
                            "text": "Number of Users: Active",
                            "info": "The total number of users that used Screwdriver resources.",
                            "std_err": false
                        },
                        "utilization": {
                            "text": "Screwdriver Utilization (%)",
                            "info": "The percentage of core time that a resource has been running jobs.<br\/><i> Screwdriver Utilization:<\/i> The ratio of the total CPU hours consumed by jobs over a given time period divided by the maximum CPU hours that the system could deliver (based on the number of cores present on the resources). This value does not take into account downtimes or outages. It is just calculated based on the number of cores in the resource specifications.",
                            "std_err": false
                        },
                        "expansion_factor": {
                            "text": "User Expansion Factor",
                            "info": "The average job size per Screwdriver job.<br><i>Job Size: <\/i>The number of processor cores used by a (parallel) job.",
                            "std_err": false
                        },
                        "avg_waitduration_hours": {
                            "text": "Wait Hours: Per Job",
                            "info": "The average time, in hours, a Screwdriver job waits before execution on the designated resource.<br\/><i>Wait Time: <\/i>Wait time is defined as the linear time between submission of a job by a user until it begins to execute.",
                            "std_err": true
                        },
                        "total_waitduration_hours": {
                            "text": "Wait Hours: Total",
                            "info": "The total time, in hours, Screwdriver jobs waited before execution on their designated resource.<br\/><i>Wait Time: <\/i>Wait time is defined as the linear time between submission of a job by a user until it begins to execute.",
                            "std_err": false
                        },
                        "avg_wallduration_hours": {
                            "text": "Wall Hours: Per Job",
                            "info": "The average time, in hours, a job takes to execute.<br\/>In timeseries view mode, the statistic shows the average wall time per job per time period. In aggregate view mode the statistic only includes the job wall hours between the defined time range. The wall hours outside the time range are not included in the calculation.<br \/> <i>Wall Time:<\/i> Wall time is defined as the linear time between start and end time of execution for a particular job.",
                            "std_err": true
                        },
                        "total_wallduration_hours": {
                            "text": "Wall Hours: Total",
                            "info": "The total time, in hours, Screwdriver jobs took to execute.<br\/><i>Wall Time:<\/i> Wall time is defined as the linear time between start and end time of execution for a particular job.",
                            "std_err": false
                        }
                    },
                    "dimensions": {
                        "none": {
                            "text": "None",
                            "info": "Summarizes Jobs data reported to the Screwdriver database."
                        },
                        "nsfdirectorate": {
                            "text": "Decanal Unit",
                            "info": "Decanal Unit"
                        },
                        "parentscience": {
                            "text": "Department",
                            "info": "Department"
                        },
                        "gpucount": {
                            "text": "GPU Count",
                            "info": "A categorization of jobs into discrete groups based on the number of GPUs used by each job."
                        },
                        "jobsize": {
                            "text": "Job Size",
                            "info": "A categorization of jobs into discrete groups based on the number of cores used by each job."
                        },
                        "jobwaittime": {
                            "text": "Job Wait Time",
                            "info": "A categorization of jobs into discrete groups based on the total linear time each job waited."
                        },
                        "jobwalltime": {
                            "text": "Job Wall Time",
                            "info": "A categorization of jobs into discrete groups based on the total linear time each job took to execute."
                        },
                        "nodecount": {
                            "text": "Node Count",
                            "info": "A categorization of jobs into discrete groups based on node count."
                        },
                        "pi": {
                            "text": "PI",
                            "info": "The principal investigator of a project."
                        },
                        "fieldofscience": {
                            "text": "PI Group",
                            "info": "PI Group"
                        },
                        "qos": {
                            "text": "QOS",
                            "info": "The quality of service of the job"
                        },
                        "queue": {
                            "text": "Queue",
                            "info": "Queue pertains to the low level job queues on each resource."
                        },
                        "resource": {
                            "text": "Resource",
                            "info": "A resource is a remote computer that can run jobs."
                        },
                        "resource_type": {
                            "text": "Resource Type",
                            "info": "A categorization of resources into by their general capabilities."
                        },
                        "username": {
                            "text": "System Username",
                            "info": "The specific system username of the users who ran jobs."
                        },
                        "person": {
                            "text": "User",
                            "info": "A person who is on a PIs allocation, hence able run jobs on resources."
                        }
                    },
                    "text": "Jobs",
                    "category": "Jobs"
                },
                "Storage": {
                    "metrics": {
                        "avg_file_count": {
                            "text": "File Count (Number of files)",
                            "info": "Average number of files.",
                            "std_err": false
                        },
                        "avg_logical_usage": {
                            "text": "Logical Usage (Bytes)",
                            "info": "Average logical file system usage measured in bytes.",
                            "std_err": false
                        },
                        "avg_physical_usage": {
                            "text": "Physical Usage (Bytes)",
                            "info": "Average physical file system usage measured in bytes.",
                            "std_err": false
                        },
                        "avg_logical_utilization": {
                            "text": "Quota Utilization: Logical (%)",
                            "info": "Average logical file system usage as a percentage of the quota soft threshold.",
                            "std_err": false
                        },
                        "avg_hard_threshold": {
                            "text": "Quota: Hard Threshold (Bytes)",
                            "info": "Average file system quota hard threshold measured in bytes.",
                            "std_err": false
                        },
                        "avg_soft_threshold": {
                            "text": "Quota: Soft Threshold (Bytes)",
                            "info": "Average file system quota soft threshold measured in bytes.",
                            "std_err": false
                        },
                        "user_count": {
                            "text": "User Count (Number of Users)",
                            "info": "Number of Screwdriver users with file system usage data.",
                            "std_err": false
                        }
                    },
                    "dimensions": {
                        "none": {
                            "text": "None",
                            "info": "Summarizes Storage data reported to the Screwdriver database."
                        },
                        "nsfdirectorate": {
                            "text": "Decanal Unit",
                            "info": "Decanal Unit"
                        },
                        "parentscience": {
                            "text": "Department",
                            "info": "Department"
                        },
                        "mountpoint": {
                            "text": "Mountpoint",
                            "info": "Storage by Mountpoint"
                        },
                        "pi": {
                            "text": "PI",
                            "info": "The principal investigator of a project."
                        },
                        "fieldofscience": {
                            "text": "PI Group",
                            "info": "PI Group"
                        },
                        "resource": {
                            "text": "Resource",
                            "info": "A resource is a remote computer that can run jobs."
                        },
                        "resource_type": {
                            "text": "Resource Type",
                            "info": "A categorization of resources into by their general capabilities."
                        },
                        "username": {
                            "text": "System Username",
                            "info": "The specific system username of the users who ran jobs."
                        },
                        "person": {
                            "text": "User",
                            "info": "A person who is on a PIs allocation, hence able run jobs on resources."
                        }
                    },
                    "text": "Storage",
                    "category": "Storage"
                }
            }
        }
    ]
}
